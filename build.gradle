plugins {
	id 'maven-publish'
	id 'fabric-loom' version "0.10-SNAPSHOT"
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	maven {
		name = 'legacy-fabric'
		url = 'https://maven.legacyfabric.net'
	}
}

loom {
	setIntermediaryUrl('https://maven.legacyfabric.net/net/fabricmc/intermediary/%1$s/intermediary-%1$s-v2.jar');
}

dependencies {
	implementation 'org.apache.logging.log4j:log4j-core:2.8.1'
	implementation 'org.apache.logging.log4j:log4j-api:2.8.1'

	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	if (System.getProperty("os.name").toLowerCase().contains("mac")) {
		implementation 'org.lwjgl.lwjgl:lwjgl_util:2.9.4-nightly-20150209'
		implementation 'org.lwjgl.lwjgl:lwjgl:2.9.4-nightly-20150209'
		implementation 'org.lwjgl.lwjgl:lwjgl-platform:2.9.4-nightly-20150209'
	} else {
		implementation 'org.lwjgl.lwjgl:lwjgl_util:2.9.0'
		implementation 'org.lwjgl.lwjgl:lwjgl:2.9.0'
		implementation 'org.lwjgl.lwjgl:lwjgl-platform:2.9.0'
	}
}

if (System.getProperty("os.name").toLowerCase().contains("mac")) {
	configurations.all {
		resolutionStrategy {
			dependencySubstitution {
				substitute module('org.lwjgl.lwjgl:lwjgl_util:2.9.2-nightly-201408222') with module('org.lwjgl.lwjgl:lwjgl_util:2.9.4-nightly-20150209')
				substitute module('org.lwjgl.lwjgl:lwjgl:2.9.2-nightly-201408222') with module('org.lwjgl.lwjgl:lwjgl:2.9.4-nightly-20150209')
			}
			force 'org.lwjgl.lwjgl:lwjgl-platform:2.9.4-nightly-20150209'
		}
	}
} else {
	configurations.all {
		resolutionStrategy {
			dependencySubstitution {
				substitute module('org.lwjgl.lwjgl:lwjgl_util:2.9.1-nightly-20130708-debug3') with module('org.lwjgl.lwjgl:lwjgl_util:2.9.0')
				substitute module('org.lwjgl.lwjgl:lwjgl:2.9.1-nightly-20130708-debug3') with module('org.lwjgl.lwjgl:lwjgl:2.9.0')
			}
			force 'org.lwjgl.lwjgl:lwjgl-platform:2.9.0'
		}
	}
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// select the repositories you want to publish to
	repositories {
		// uncomment to publish to the local maven
		// mavenLocal()
	}
}
